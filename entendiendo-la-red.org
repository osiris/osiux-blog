#+TITLE:     entendiendo la red
#+AUTHOR:    Osiris Alejandro Gómez
#+EMAIL:     osiux@osiux.com
#+LANGUAGE:  es
#+LINK_HOME: index.html
#+OPTIONS:   toc:nil
#+INCLUDE: "header.org"
#+DATE:      2013-04-04

** Topología, redes y Subredes

   - centralizada

     #+BEGIN_SRC ditaa :file img/redes-centralizadas.png :cmdline -E :exports results
       +---+             +---+
       | A +-----+ +-----+ B |
       +---+     | |     +---+
                ++-++
                | C |
                ++-++
       +---+     | |     +---+
       | D +-----+ +-----+ E |
       +---+             +---+
     #+END_SRC

   - descentralizada

     #+BEGIN_SRC ditaa :file img/redes-descentralizadas.png :cmdline -E :exports results
       +---+             +---+  +---+             +---+
       | A +-----+ +-----+ B |  | F +-----+ +-----+ G |
       +---+     | |     +---+  +---+     | |     +---+
                ++-++                    ++-++
                | C +--------------------+ H |
                ++-++                    ++-++
       +---+     | |     +---+  +---+     | |     +---+
       | D +-----+ +-----+ E |  | I +-----+ +-----+ J |
       +---+             +---+  +---+             +---+
     #+END_SRC

   - en malla o /mesh/

     #+BEGIN_SRC ditaa :file img/redes-mesh.png :cmdline -E -S :exports results
       +---+             +---+  +---+             +---+
       | A +-----+ +-----+ B +--+ F +-------------+ G |
       ++-++     | |     ++--+  +--++             +--++
        | |     ++-++     |        |     +---+       |
        | +-----+ C +-----+ +----+ +-----+ H +-----+ |
        |       ++-++       |    |       ++-++     | |
       ++--+     | |     +--++  ++--+     | |     ++-++
       | D +-----+ +-----+ E |  | I +-----+ +-----+ J |
       +---+             +---+  +---+             +---+
     #+END_SRC

     #+RESULTS:
     [[file:img/redes-mesh.png]]

** Protocolos ARP/IP/ICMP/UDP/TCP/IP                               :noexport:
** Ruteo                                                           :noexport:

   - estático
   - dinámico

** Asignación de IPs por medio de DHCP

   - DHCP server
   - DHCP client
     
*** Red de 4 equipos

    #+BEGIN_SRC ditaa :file img/redes-lan.png :cmdline -E :exports results
      -----+---------+---------+---------+-----
           |         |         |         |
           |         |         |         |
         +-+-+     +-+-+     +-+-+     +-+-+
         | A |     | B |     | C |     | D |
         +---+     +---+     +---+     +---+
    #+END_SRC

*** =B= dice, *necesito una IP!*

    - mensaje: =DHCPDISCOVER=
    - protocolo: UDP
    - puerto destino: 67
    - dirección física: 01:12:23:34:45:bb

    #+BEGIN_SRC ditaa :file img/redes-dhcp-discover.png :cmdline -E :exports results
      <----*---------*---------*---------*---->
           |         ^         |         |
           v         |         v         v
         +-+-+     +-+-+     +---+     +---+
         | A |     | B |     | C |     | D |
         +---+     +---+     +---+     +---+
    #+END_SRC

*** =D= dice, *yo te puedo dar IP!*

    - mensaje: =DHCPOFFER=
    - dirección física: 01:12:23:34:45:dd
    - dirección IP: 192.168.10.102
    - gateway: 192.168.10.1
    - dns primario: 8.8.8.8
    - dns secundario: 8.8.4.4

    #+BEGIN_SRC ditaa :file img/redes-dhcp-offer.png :cmdline -E :exports results
      -----+---------*---------*---------*-----
           |         |         |         ^
           |         v         |         |
         +-+-+     +-+-+     +-+-+     +-+-+
         | A |     | B |     | C |     | D |
         +---+     +---+     +---+     +---+
    #+END_SRC

*** =B= dice, confirmo recepción!

    - mensaje: =DHCPREQUEST=

    #+BEGIN_SRC ditaa :file img/redes-dhcp-request.png :cmdline -E :exports results
      -----+---------+---------*---------*-----
           |         ^         |         |
           |         |         |         v
         +-+-+     +-+-+     +-+-+     +-+-+
         | A |     | B |     | C |     | D |
         +---+     +---+     +---+     +---+
    #+END_SRC

*** =D= dice, confirmo confirmación!

    - mensaje: =DHCPACK=

    #+BEGIN_SRC ditaa :file img/redes-dhcp-ack.png :cmdline -E :exports results
      -----+---------*---------*---------*-----
           |         |         |         ^
           |         v         |         |
         +-+-+     +-+-+     +-+-+     +-+-+
         | A |     | B |     | C |     | D |
         +---+     +---+     +---+     +---+
    #+END_SRC

    #+RESULTS:
    [[file:img/redes-dhcp-ack.png]]

** Resolución de nombres de dominios DNS

   #+BEGIN_SRC sh :session :results output :exports both
     host localhost
   #+END_SRC

   #+RESULTS:
   : localhost.gcoop.com.ar has address 127.0.0.1

   #+BEGIN_SRC sh :session :results output :exports both
     dig osiux.com
   #+END_SRC

   #+RESULTS:
   #+begin_example

   ; <<>> DiG 9.8.4-P1 <<>> osiux.com
   ;; global options: +cmd
   ;; Got answer:
   ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 12788
   ;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0

   ;; QUESTION SECTION:
   ;osiux.com.			IN	A

   ;; ANSWER SECTION:
   osiux.com.		300	IN	A	96.8.118.129

   ;; Query time: 198 msec
   ;; SERVER: 192.168.10.3#53(192.168.10.3)
   ;; WHEN: Tue Apr  9 23:29:33 2013
   ;; MSG SIZE  rcvd: 43

#+end_example

*** viendo un paquete de query dns

    #+BEGIN_SRC sh :session :results output :exports both
      tcpdump -r dns-query.pcap -nvX
    #+END_SRC

    #+RESULTS:
    : 02:14:20.301428 IP (tos 0x0, ttl 64, id 27874, offset 0, flags [none], proto UDP (17), length 55)
    :     127.0.0.1.57039 > 127.0.0.1.53: 39172+ A? osiux.com. (27)
    : 	0x0000:  4500 0037 6ce2 0000 4011 0fd2 7f00 0001  E..7l...@.......
    : 	0x0010:  7f00 0001 decf 0035 0023 fe36 9904 0100  .......5.#.6....
    : 	0x0020:  0001 0000 0000 0000 056f 7369 7578 0363  .........osiux.c
    : 	0x0030:  6f6d 0000 0100 01                        om.....

*** analizando un paquete de query dns

    #+BEGIN_SRC sh :session :results output :exports both
      tshark -r dns-query.pcap -VO dns
    #+END_SRC

    #+RESULTS:
    #+begin_example
    Frame 1: 71 bytes on wire (568 bits), 71 bytes captured (568 bits)
    Linux cooked capture
    Internet Protocol Version 4, Src: 127.0.0.1 (127.0.0.1), Dst: 127.0.0.1 (127.0.0.1)
    User Datagram Protocol, Src Port: 57039 (57039), Dst Port: domain (53)
    Domain Name System (query)
	Transaction ID: 0x9904
	Flags: 0x0100 Standard query
	    0... .... .... .... = Response: Message is a query
	    .000 0... .... .... = Opcode: Standard query (0)
	    .... ..0. .... .... = Truncated: Message is not truncated
	    .... ...1 .... .... = Recursion desired: Do query recursively
	    .... .... .0.. .... = Z: reserved (0)
	    .... .... ...0 .... = Non-authenticated data: Unacceptable
	Questions: 1
	Answer RRs: 0
	Authority RRs: 0
	Additional RRs: 0
	Queries
	    osiux.com: type A, class IN
		Name: osiux.com
		Type: A (Host address)
		Class: IN (0x0001)

#+end_example

*** capturar consultas al dns

    #+BEGIN_EXAMPLE    
      ssh root@linksys '/usr/sbin/tcpdump -i br0 -s 0 -w - dst port 53' >linksys.pcap 
    #+END_EXAMPLE

*** ranking de dns

    #+BEGIN_EXAMPLE
      tcpdump -r linksys.pcap -c 2000 -nnnA dst port 53 | \
      egrep -o "A+\? .*\." | sed s/".$"//g | awk '{print $2}' | \
      egrep -v "(osiux|fbcdn|akamai)" | sort | uniq -c | sort -nr | head
    #+END_EXAMPLE

    #+NAME: ranking-dns
    | 47 | www.facebook.com         |
    | 42 | dns.msftncsi.com         |
    | 41 | su.ff.avast.com          |
    | 37 | ssl.google-analytics.com |
    | 37 | ipv6.msftncsi.com        |
    | 32 | www.habbo.es             |
    | 26 | imap.googlemail.com      |
    | 21 | dynamic.zoneedit.com     |
    | 19 | www.msftncsi.com         |
    | 18 | kiwwwi.com.ar            |

    #+BEGIN_SRC gnuplot :var data=ranking-dns :file img/ranking-dns.png :exports none
      reset 

      set xdata time
      set timefmt "%Y-%m-%d"
      set format x "%d"

      set title "Plot"
      set xlabel "dominios"
      set ylabel "cantidad"
      set xtics nomirror
      set ytics nomirror

      plot data using 2:1 with lines lw 2 lt 3 title 'data'
    #+END_SRC

** Redes Wireless                                                  :noexport:
    
   - Emulan a las redes cableadeas
   - infraestructura
   - ad-hoc

** Sniffers nmap, dsniff                                           :noexport:
*** nmap

    #+BEGIN_SRC sh :session :results output
      nmap -sV --open 192.168.10.0/24 -p22
    #+END_SRC

    #+RESULTS:
    #+begin_example

    Starting Nmap 5.51.6 ( http://nmap.org ) at 2013-05-22 10:29 ART
    Nmap scan report for malbec (192.168.10.3)
    Host is up (0.0012s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.5p1 Debian 6 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for torrontes (192.168.10.5)
    Host is up (0.00089s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.1p1 Debian 5 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for tannat.gcoop.com.ar (192.168.10.6)
    Host is up (0.00074s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.1 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for carpani.gcoop.com.ar (192.168.10.24)
    Host is up (0.0016s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 6.2 (protocol 2.0)

    Nmap scan report for avioncito.gcoop.com.ar (192.168.10.42)
    Host is up (0.00054s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 6.2 (protocol 2.0)

    Nmap scan report for amaretto.gcoop.com.ar (192.168.10.96)
    Host is up (0.00048s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 6.0p1 Debian 3 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for sangria.gcoop.com.ar (192.168.10.99)
    Host is up (0.00054s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.1 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for mysqlcentos.gcoop.com.ar (192.168.10.106)
    Host is up (0.0012s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 4.3 (protocol 2.0)

    Nmap scan report for sugar-mant.gcoop.com.ar (192.168.10.111)
    Host is up (0.00078s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.1p1 Debian 5 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for squeeze.gcoop.com.ar (192.168.10.118)
    Host is up (0.0014s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.5p1 Debian 6+squeeze1 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for recibos.gcoop.com.ar (192.168.10.130)
    Host is up (0.00088s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for albatros.gcoop.com.ar (192.168.10.131)
    Host is up (0.0011s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 6.0p1 Debian 3ubuntu1 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for drupales.gcoop.com.ar (192.168.10.132)
    Host is up (0.0011s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.5p1 Debian 6+squeeze2 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for documentos.gcoop.com.ar (192.168.10.138)
    Host is up (0.0011s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for adoption.gcoop.com.ar (192.168.10.140)
    Host is up (0.0024s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for redmine.gcoop.com.ar (192.168.10.141)
    Host is up (0.0024s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.5p1 Debian 3 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for trytonsantu.gcoop.com.ar (192.168.10.144)
    Host is up (0.0021s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.8p1 Debian 1ubuntu3 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for cacharro2.gcoop.com.ar (192.168.10.145)
    Host is up (0.0020s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 4.3p2 Debian 8ubuntu1.5 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for gitlab.gcoop.com.ar (192.168.10.184)
    Host is up (0.0013s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.5p1 Debian 6+squeeze2 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for raven.gcoop.com.ar (192.168.10.186)
    Host is up (0.0013s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for gca.gcoop.com.ar (192.168.10.193)
    Host is up (0.00090s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.1p1 Debian 5 (protocol 2.0)
    Service Info: OS: Linux

    Nmap scan report for fontar.gcoop.com.ar (192.168.10.197)
    Host is up (0.00087s latency).
    PORT   STATE SERVICE VERSION
    22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1 (protocol 2.0)
    Service Info: OS: Linux

    Service detection performed. Please report any incorrect results at http://nmap.org/submit/ .
    Nmap done: 256 IP addresses (23 hosts up) scanned in 6.43 seconds
#+end_example

** Análisis de tráfico mediante tcpdump                            :noexport:
** Firewall, Port Forwarding, NAT                                  :noexport:
*** iptables
** Túneles y Redes Privadas Virtuales VPN                          :noexport:
*** Redireccionar puertos con =ssh=

    #+BEGIN_EXAMPLE
      ssh -L 2525:localhost:25 osiux.com    
    #+END_EXAMPLE

*** Proxy Socks mediante ssh

    #+BEGIN_EXAMPLE
      ssh -D 9090 osiux.com    
    #+END_EXAMPLE

*** Tunel reverso con ssh

    #+BEGIN_EXAMPLE
      ssh -R 12345:localhost:22 osiux.com    
    #+END_EXAMPLE

*** Redireccionar puertos con =socat=
** Cómo saber la IP de un equipo?
*** B dice, *cuál es la IP de D?*

    - Se que D es *00:14:d1:18:4a:dd*
    - Yo soy B y mi mac es *00:14:d1:18:4a:bb*
    - Todos reciben paquete ARP por difusión

    #+BEGIN_SRC ditaa :file img/redes-arp-1.png :cmdline -E :exports results
      <----+<--------+-------->+-------->+---->
           |         ^         |         |
           v         |         v         v
         +-+-+     +-+-+     +-+-+     +-+-+
         | A |     | B |     | C |     | D |
         +---+     +---+     +---+     +---+
    #+END_SRC

*** D contesta, *mi IP es 10.4.14.225*

    #+BEGIN_SRC ditaa :file img/redes-arp-2.png :cmdline -E :exports results
      -----+---------+<--------+---------+-----
           |         |         |         ^
           |         v         |         |
         +-+-+     +-+-+     +-+-+     +-+-+
         | A |     | B |     | C |     | D |
         +---+     +---+     +---+     +---+
    #+END_SRC

*** Quénes están en esta red?

    #+BEGIN_SRC sh :session :results output :exports both
      sudo arp-scan --interface eth0 --localnet
    #+END_SRC

    #+RESULTS:
    :
    : 0 packets received by filter, 0 packets dropped by kernel
    : Ending arp-scan 1.8.1: 256 hosts scanned in 1.625 seconds (157.54 hosts/sec). 0 responded

*** pingueando

    #+BEGIN_SRC sh :session :results output :exports both
      ping -c 5 127.0.0.1
    #+END_SRC

    #+RESULTS:
    #+begin_example
    PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
    64 bytes from 127.0.0.1: icmp_req=1 ttl=64 time=0.066 ms
    64 bytes from 127.0.0.1: icmp_req=2 ttl=64 time=0.050 ms
    64 bytes from 127.0.0.1: icmp_req=3 ttl=64 time=0.050 ms
    64 bytes from 127.0.0.1: icmp_req=4 ttl=64 time=0.048 ms
    64 bytes from 127.0.0.1: icmp_req=5 ttl=64 time=0.049 ms

    --- 127.0.0.1 ping statistics ---
    5 packets transmitted, 5 received, 0% packet loss, time 3999ms
    rtt min/avg/max/mdev = 0.048/0.052/0.066/0.010 ms
    #+end_example

*** capturando pings

    #+BEGIN_SRC sh :session :results output :exports both
      sudo tcpdump -i lo -nnnt -c 5 icmp
    #+END_SRC

    #+RESULTS:

*** viendo un =ping=

    #+BEGIN_EXAMPLE
      sudo tcpdump -i lo -nnntvvX -c 1 -e icmp
    #+END_EXAMPLE

    #+BEGIN_EXAMPLE
      00:00:00:00:00:00 > 00:00:00:00:00:00, ethertype IPv4 (0x0800), length 98: (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto ICMP (1), length 84)
          127.0.0.1 > 127.0.0.1: ICMP echo request, id 4177, seq 329, length 64
        0x0000:  4500 0054 0000 4000 4001 3ca7 7f00 0001  E..T..@.@.<.....
        0x0010:  7f00 0001 0800 a68d 1051 0149 e754 5e51  .........Q.I.T^Q
        0x0020:  022f 0d00 0809 0a0b 0c0d 0e0f 1011 1213  ./..............
        0x0030:  1415 1617 1819 1a1b 1c1d 1e1f 2021 2223  .............!"#
        0x0040:  2425 2627 2829 2a2b 2c2d 2e2f 3031 3233  $%&'()*+,-./0123
        0x0050:  3435 3637                                4567     
    #+END_EXAMPLE

** Red con acceso a otra red                                       :noexport:

   #+BEGIN_SRC ditaa :file img/redes-lan-wan.png :cmdline -E :exports result
     -----+---------+<--------+---------+-----
          |         |         |         ^
          |         v         |         |
        +-+-+     +-+-+     +-+-+     +-+-+
        | A |     | B |     | C |     | D |
        +---+     +---+     +---+     +-+-+
                                        |
                                        |
                                        +-----
    #+END_SRC

   #+RESULTS:
   [[file:img/redes-lan-wan.png]]

   #+BEGIN_SRC ditaa :file img/redes-lan-proxy-wan.png :cmdline -E :exports result
     -----+---------*---------*---------*-----
          |         ^         |         |
          |         |         |         v
        +-+-+     +-+-+     +-+-+     +---+
        | A |     | B |     | C |     | D |
        +---+     +---+     +---+     +-+-+
                                        |
                                        v
                                      +---+
                                      | E |
                                      +-+-+
                                        |
                                        v
   #+END_SRC

   #+RESULTS:
   [[file:img/redes-lan-proxy-wan.png]]

** protocolos

   #+BEGIN_SRC ditaa :file img/redes-protocolos-1.png :cmdline -E :exports results
     +----------+
     | TCP/UDP  |
     +----------+
     | IP/ICMP  |
     +----------+
     | ARP      |
     +----------+
     | ETHERNET |
     +----------+
   #+END_SRC

   #+RESULTS:
   [[file:img/redes-protocolos-1.png]]

   #+BEGIN_SRC ditaa :file img/redes-protocolos-2.png :cmdline -E :exports results
                                +-------+
                                | Data  |          <-- Aplicación
                                |       |
                                |       |
                       +--------+-------+
                       | UDP    | UDP   |          <-- Transporte
                       | header | data  |
                       |        |       |
              +--------+--------+-------+
              | IP     | IP             |          <-- Internet
              | header | data           |
              |        |                |
     +--------+--------+----------------+--------+
     | Frame  | Frame                   | Frame  | <-- Link
     | header | data                    | footer |
     |        |                         |        |
     +--------+-------------------------+--------+
   #+END_SRC

   #+RESULTS:
   [[file:img/redes-protocolos-2.png]]

*** Qué tiene un paquete TCP/IP?

    #+BEGIN_EXAMPLE
     +------------------------+--------------------------+
     | MAC origen fe:ca:fe:ca | MAC destino  ca:fe:ca:fe |
     +------------------------+--------------------------+
     | IP origen 192.168.1.22 | IP destino  96.8.118.129 |
     +---------------------------------------------------+
     | Puerto origen    45678 | Puerto destino: 80       |
     +------------------------+--------------------------+
     | Nro Secuencia    12345 | Nro ACK                  |
     +---+---+---+---+---+----+--------------------------+
     | U | A | P | R | S | F | GET / HTTP/1.0            |
     | R | C | S | S | Y | I |                           |
     | G | K | H | T | N | N |                           |
     +---+---+---+---+---+---+---------------------------+
    #+END_EXAMPLE

*** Ethernet header

    #+BEGIN_EXAMPLE
      |                   |1                  |2                  |3  |
      |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      |         Hardware type         |          Protocol type        |
      +---------------+---------------+-------------------------------+
      |Hw address len.|Pr address len.|             Opcode            |
      +---------------+---------------+-------------------------------+
      |               Source hardware address                         |
      +---------------------------------------------------------------+
      |               Source protocol address                         |
      +---------------------------------------------------------------+
      |               Destination hardware address                    |
      +---------------------------------------------------------------+
      |               Destination protocol address                    |
      +---------------------------------------------------------------+
      |                            Data                               |
      +---------------------------------------------------------------+
    #+END_EXAMPLE

** IP header

   #+BEGIN_EXAMPLE
     |                   |1                  |2                  |3  |
     |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |Version|  IHL  | Diff.Services |     Total length              |
     +-------+-------+---------------+-----+-------------------------+
     |        Identification         |Flags|         Fragment offset |
     +---------------+---------------+-----+-------------------------+
     |    TTL        | Protocol      | Header checksum               |
     +---------------+---------------+-------------------------------+
     |                       Source IP address                       |
     +---------------------------------------------------------------+
     |                  Destination IP address                       |
     +---------------------------------------------------------------+
     |                     Options and padding                       |
     +---------------------------------------------------------------+
   #+END_EXAMPLE

** UPD header

   #+BEGIN_EXAMPLE
     |                   |1                  |2                  |3  |
     |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Source Port          |        Destination Port       |
     +-------------------------------+-------------------------------+
     |          Length               |        Checksum               |
     +-------------------------------+-------------------------------+
     |                           Data                                |
     +---------------------------------------------------------------+
   #+END_EXAMPLE

** TCP header

   #+BEGIN_EXAMPLE
     |                   |1                  |2                  |3  |
     |0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |          Source Port          |        Destination Port       |
     +-------------------------------+-------------------------------+
     |                        Sequence Number                        |
     +-------------------------------+-------------------------------+
     |                     Acknowledgment Number                     |
     +-------+-----+-----+-+-+-+-+-+-+-------------------------------+
     |dOffset|rsrvd| ECN |U|A|P|R|S|F|        Window                 |
     |       |     |     |R|C|S|S|Y|I|                               |
     |       |     |     |G|K|H|T|N|N|                               |
     +-------+-----+-----+-+-+-+-+-+-+-------------------------------+
     | Checksum                      | Urgent Pointer                |
     +-------------------------------+-------------------------------+
     |                      Options and padding                      |
     +---------------------------------------------------------------+
     |                           Data                                |
     +---------------------------------------------------------------+
   #+END_EXAMPLE

** ChangeLog

   - [2013-06-05 mié] simplifico y hago correcciones varias
   - [2013-04-09 mar] corrijo gráficos ascii-art
   - [2013-04-04 jue] primer borrador general

[fn:arp] http://www.networksorcery.com/enp/protocol/arp.htm
   

#+TITLE:     TODO TXT | rst + org-mode
#+AUTHOR:    Osiris Alejandro Gómez
#+EMAIL:     osiux@osiux.com
#+LANGUAGE:  es
#+LINK_HOME: index.html
#+INCLUDE: "header.org"
#+OPTIONS: toc:nil timestamp:nil
#+DATE:      2010-11-12

#+BEGIN_EXAMPLE
                _                 _              _            _
               | |_    ___     __| |   ___      | |_  __  __ | |_
               | __|  / _ \   / _` |  / _ \     | __| \ \/ / | __|
               | |_  | (_) | | (_| | | (_) |    | |_   >  <  | |_
                \__|  \___/   \__,_|  \___/      \__| /_/\_\  \__|

                _                                                      _
       _ __ ___| |_     _      ___  _ __ __ _      _ __ ___   ___   __| | ___
      | '__/ __| __|  _| |_   / _ \| '__/ _` |____| '_ ` _ \ / _ \ / _` |/ _ \
      | |  \__ \ |_  |_   _| | (_) | | | (_| |____| | | | | | (_) | (_| |  __/
      |_|  |___/\__|   |_|    \___/|_|  \__, |    |_| |_| |_|\___/ \__,_|\___|
                                        |___/
#+END_EXAMPLE

** Slides

  - http://pub.osiux.com/charlas/todo-txt-rst+org-mode-slides.pdf

** Introducción

*** Sobre el Autor

    Osiris Alejandro Gómez, es Programador y Administrador
    GNU/Linux. Socio de /gcoop/ [fn:gcoop] Cooperativa de Software
    Libre y miembro del grupo de organización de /BAL/ [fn:BAL]
    (Buenos Aires Libre), además colabora en /USLA/ [fn:USLA]
    (Usuarios de Software Libre de Argentina) y /CaFeLUG/ [fn:CaFeLUG]
    (Grupo de Usuarios GNU/Linux de la Capital Federal).

*** Descripción breve

    Utilización de *re-StructuredText* [fn:reST] como fuente principal
    de un documento y *Org-mode* [fn:org-mode] para organización de
    tareas. Su uso tanto para la web, presentaciones, hojas de
    referencia y documentación de alta calidad.

** Porqué usar TXT?

   - único formato multiplataforma.
   - se puede leer y editar siempre.
   - automatizar la creación/modificación.
   - es versionable (git, svn, mercurial, etc).
   - ocupa muy poco espacio (muy comprimible).
   - no está atado a un software.
   - podés usar cualquier editor de texto.
   - exportable a cualquier formato.

   #+ATTR_HTML: :width 640 :height 480 :alt exportar TXT a RST ORG PNG JPG S5 PDF
   [[file:img/txt.png][file:tmb/txt.png]]

** Editores de Texto

   #+ATTR_HTML: :width 640 :height 480 :alt exportar Emacs VIM Notepad
   [[file:img/emacs-vim-notepad.png][file:tmb/emacs-vim-notepad.png]]

** Vim

   #+ATTR_HTML: :width 640 :height 480 :alt exportar Emacs VIM Notepad
   [[file:img/vim-vs-emacs.jpg][file:tmb/vim-vs-emacs.jpg]]

   - *Vi IMproved* es una versión mejorada del =vi= por Bill Joy [fn:Joy] en 1976.
   - Desarrollado por Bram Moolenaar [fn:Moolenaar] en 1991.
   - =vi= está disponible en todos los sistemas UNIX.
   - Se pueden realizar operaciones muy complejas en muy pocos pasos.
   - La gran mayoría de los comandos son de una sola tecla.
   - Posee modos de Visualización, Inserción y Comando.
   - Hay muchas aplicaciones que usan la misma cominación de teclas.

*** Leer y Editar Archivos

    | =:w [archivo]= | Guarda los cambios del archivo actual                          |
    | =:wq=          | Sale guardando los cambios del archivo actual cambios          |
    | =:q!=          | Sale del editor sin guardar cambios                            |
    | =:q=           | evita perder modificaciones                                    |
    | =:e archivo=   | Edita el archivo indicado                                      |
    | =:r archivo=   | Lee el contenido del archivo y lo escribe en el buffer actual  |
    | =gf=           | Abre el archivo bajo el cursor (usar CTRL-o para regresar)     |
    | =CTRL+]=       | Da un salto a donde se define el símbolo debajo del cursor (*) |
    | =CTRL+t=       | Regresa al archivo anterior luego de hacer un salto (*)        |

    * Usar =ctags= para que funcione correctamente, al menos en PHP, C y python.

*** Modo Inserción

    | =i= | Ingresa a izquierda del caracter actual  |
    | =I= | Ingresa al principio de la linea         |
    | =a= | Ingresa a derecha del caracter actual    |
    | =A= | Ingresa al final de la linea             |
    | =o= | Inserta un linea debajo de la actual     |
    | =O= | Inserta una linea arriba de la actual    |

*** Movimientos

    | =H, L=   | Izquierda, Derecha                                       |
    | =J, K=   | Abajo, Arriba                                            |
    | =CTRL-d= | Avaza media pantalla                                     |
    | =CTRL-u= | Retrocede media pantalla                                 |
    | =w, W=   | Avanza de a palabras, W hace saltos mas largos           |
    | =b, B=   | Como *w, W* en sentido inverso                           |
    | =e, E=   | Como *w, W* coloca el cursor a la derecha de la palabra  |
    | =0, $=   | Principio y final de la linea actual                     |
    | =gg, G=  | Ir al principio o final del archivo                      |
    | =:nro=   | Se dirige directamente al número de línea indicado       |

*** Borrar y Deshacer

    | =D, d$=  | Borra todos los caracteres hasta el final de la linea  |
    | =x=      | Elimina el caracter bajo el cursor **delete**          |
    | =X=      | Elimina el caracter bajo el cursor **backpace**        |
    | =dd=     | Elimina la linea actual                                |
    | =d{5w}=  | Borra 5 palabras hacia la derecha                      |
    | =u=      | Deshacer el último cambio                              |
    | =CTRL-R= | Rehacer                                                |
    | =U=      | Deshacer todos los cambios de la linea actual          |

*** Búsquedas

    Opciones para habilitar búsquedas inmediatas y subrayado de
    resultado:

    #+BEGIN_EXAMPLE
      :set incsearch
      :set ignorecase smartcase
      :set hlsearch
    #+END_EXAMPLE

    =/{patrón}, ?{patrón}=

        Inicia la búsqueda de la expresión regular {patrón}. Con / es
        una búsqueda hacia abajo y ? hacia abajo.

    =n, N=

        Para avanzar o retroceder en los resultados de la búsqueda.

    =vimgrep /{patrón}/ *=

        Busca la expresión regular en todos los archivos del directorio
        actual.  Otra variante es utilizar =*= para iniciar una
        búsqueda recursiva o =*.php= para restringir la búsqueda
        solamente a un tipo de archivo.

*** Buscar y Reemplazar

    =:{rango}s/{a_buscar}/{reemplazo}/g=

        Reemplaza todas las apariciones de {a_buscar} por {reemplazo} en
        el sector indicado por {rango}. Si omite {rango} se actúa
        solamente en la linea actual, si coloca % como {rango} se
        reemplaza en todo el archivo. También puede invocar el reemplazo
        desde el modo visual (iniciado con *v*) para actuar solamente en
        la porción definida.

*** Copiar y pegar

    | =y{3w}= | Copia (yank) copia 3 palabras                      |
    | =y$=    | Copia hasta hasta el final de linea                |
    | =yy=    | Copia la linea completa                            |
    | =p, P=  | Pega el texto debajo o arriba de la linea actual   |
    | =ddp=   | Invierte dos líneas                                |

*** Otros modos de selección

    | =v=       | Define una zona de selección                     |
    | =CTRL-v=  | Similar al anterior pero en bloque               |
    | =SHIFT-v= | Útil para seleccionar lineas de texto completas  |

*** Autocompletado

    =CTRL-x CTRL-p, CTRL-x CTRL-n=

        Sugiere palabras similares a la actual buscando hacia arriba o
        abajo.  Funciona en cualquier tipo de archivo.

    =CTRL-x CTRL-f=

        Autocompleta nombres de archivos.

    =CTRL-x CTRL-o=

        Sugiere términos en base a la sintaxis del archivo actual. Por
        ejemplo si edita un archivo .html sugiere elementos de HTML y
        reconoce el contexto.  En archivos .py inspecciona objetos de
        python, o en archivos .css sugiere elementos, propiedades y
        valores.  En otros lenguajes como C hay que usar el comando
        externo **ctags** para que funcione. Igual es groso...

    =CTRL-x CTRL-k=

        Autocompleta consultando un diccionario personalizado. Usar algo
        como *:set dictionary=palabras.txt* para definir el diccionario.

*** Ventanas y Tabs

    | =:split=   | Divide la ventana horizontalmente      |
    | =:vsplit=  | Similar al anterior pero verticalmente |
    | =:Explore= | Abre un navegador de archivos          |
    | =CTRL-w=   | Alterna entre ventanas                 |
    | =:tabNew=  | Crea un nuevo tab                      |
    | =:tabNext= | Alterna entre tabs                     |

*** Integración con bash

    | =:!comando=   | Ejecuta el comando y muestra la salida en pantalla         |
    | =:r !comando= | Ejecuta el comando e inserta la salida de pantalla         |
    |               | Por ejemplo *:r !cal* inserta el calendario del mes actual |
    | =:shell=      | Inicia un proceso bash, utilice *exit* para regresar       |

*** Atajos y macros

    =:map <F5> :r !date<CR>=

        Asigna una operación a la pulsación de una tecla. En este caso
        cuando se pulse la tecla *F5* se ha va escribir la hora actual
        en el documento.  El comando *imap* es similar pero funciona
        en modo insersión.

    =:abbr ,e micorreo@gcoop.coop=

        Genera una abreviatura que se expande automáticamente. En ese
        ejemplo al escribir *,e* VIM escribirá una dirección de correo
        completa.

    =qa=

        Guarda en un registro (*"a"* en este caso) todas las
        operaciones que realice. Tiene que pulsar la tecla *q* para
        terminar la grabación.

    =@a=

        Repite las operaciones que ha guardado en el registro
        *a*. Puede usar un número antes de @ para repetir la acción
        muchas veces.

*** Corrector ortográfico

    | =:set spell spelllang=es= | Habilita el corrector en español        |
    | ==z=                      | Muestra sugerencias de corrección       |
    | =zg=                      | Agrega en el diccionario la palabra     |
    | =]s, [s=                  | Avanza o retrocede palabras incorrectas |

*** Otros

    | =.=             | Repite el último cambio                                              |
    | =SHIFT-j=       | Une la linea actual con la siguente, elimina el salto de linea       |
    | =gqap=          | Aplica formato a todo el párrafo                                     |
    | =:set wildmenu= | Visor de autocompletado en la barra de comandos                      |
    | =:colorscheme=  | Alterna el tema de colores actual                                    |
    | =:set paste=    | Habilita *pegar* texto desde aplicaciones externas                   |
    | =:X=            | Solicita una contraseña para cifrar el contenido de un archivo       |
    | =%=             | Busca el complemento del paréntesis, llave o corchete bajo el cursor |
    | =*=             | Va al primer caracter de la siguiente linea                          |

** re-StructuredText

*** Instalación

    #+BEGIN_EXAMPLE
      apt-get install python-docutils
    #+END_EXAMPLE

*** Generar HTML/Slides/Latex/PDF

    #+BEGIN_EXAMPLE
      rst2html presentacion.txt >presentacion.html
      rst2s5 presentacion.txt >presentacion.html
      rst2latex presentacion.txt presentacion.tex
      rst2pdf presentacion.txt -o presentacion.pdf
    #+END_EXAMPLE

*** Sintaxis

    Es extremandamente simple, prácticamente es un texto plano con
    algunas convenciones.

**** Resaltado y Listas

     #+BEGIN_EXAMPLE
       normal, *italica*
       **negrita**, ``código``
       \*evitar italica*
       a. item a
       * item dos
       - item tres
             - tres uno
       4. cuatro
             4.1. cuatro uno
       #. cinco
       #. seis
     #+END_EXAMPLE

     #+BEGIN_EXAMPLE
       ================
       titulo documento
       ================

       -----------------------
       subtitulo del documento
       -----------------------

       título capítulo 1
       =================

       título sección 1
       ----------------

       título sección 1.1
       ``````````````````

       título subsección 2
       ~~~~~~~~~~~~~~~~~~~
     #+END_EXAMPLE

     [[file:img/secciones.png]]

**** Tablas

     #+BEGIN_EXAMPLE
       ========== ===========
        columna 1  columna 2
       ========== ===========
        fila 1     celda
        fila 2     celda
       ========== ===========

       +-----------+-------------+
       | columna 1 |  columna 2  |
       +===========+=============+
       | fila 1    |  *italica*  |
       +-----------+-------------+
       | segunda   |  osiux_     |
       | fila      |             |
       +-----------+-------------+
       | fila 3    | **negrita** |
       +-----------+-------------+
       | fila 4    | - item a    |
       |           | - item b    |
       +-----------+-------------+
       | ``codigo de ejemplo``   |
       | ``en una tabla``        |
       +-----------+-------------+
     #+END_EXAMPLE

**** Links

     #+BEGIN_EXAMPLE
       `enlace uno`_

       enlace dos http://osiux.com

       enlace tres_

       `enlace cuatro`_

       `enlace seis <http://osiux.com.ar>`_

       `enlace siete <mailto:noreply@osiux.com>`_

       |osiux|_

       .. _enlace uno: http://vim.org
       .. _tres: http://vim.org
       .. _enlace cuatro: `enlace cinco`_
       .. _enlace cinco: http:://osiux.com
       .. |osiux| replace:: re-StructuredText
       .. _osiux: http://osiux.com.ar
     #+END_EXAMPLE

**** Referencias

     #+BEGIN_EXAMPLE
       Que ganas de tomar un fernet [1]_
       aunque una caipiroska [#]_ no vendría mal
       igual nunca está demás una stella [#stella]_
       para el verano es bueno el clericó [#clerico]_ y la sangría [#sangria]_.

       .. [1] también conocido como *Branca*
       .. [#] la suma de vodka + caipiriña
       .. [#stella] esta mejor que la quilmes
       .. [#clerico] o como ponerle onda a una ensalada de frutas
       .. [#sangria] limón y azucar para levantar un tetra
     #+END_EXAMPLE

**** Imágenes

     #+BEGIN_EXAMPLE
       .. image:: img/no-soy-un-pirata.jpg
          :width: 6cm
          :height: 6cm
          :alt: no soy un pirata, compartir es bueno
          :align: center
          :target: http://buenosaireslibre.org
     #+END_EXAMPLE

**** Reemplazar

     #+BEGIN_EXAMPLE
       * Attribution                                     |BY|
       * Attribution-Share Alike                         |BY| |SA|
       * Attribution-No Derivative Works                 |BY| |ND|
       * Attribution-Noncommercial                       |BY| |NC|
       * Attribution-Noncommercial-No Derivative Works   |BY| |NC| |ND|
       * Attribution-Noncommercial-Share                 |BY| |NC| |SA|
       .. |BY| image:: img/CC-BY.png
       .. |SA| image:: img/CC-SA.png
       .. |ND| image:: img/CC-ND.png
       .. |NC| image:: img/CC-NC.png
     #+END_EXAMPLE

**** Código

     #+BEGIN_EXAMPLE
       .. code-block:: php

           <?php
               $x="Hola Mundo";
               echo $x;
           ?>

       .. code-block:: python

           def p(x)::
               print('Hola ' + x)

           p('Mundo');
     #+END_EXAMPLE

*** Aplicaciones

**** Wordpress

     - http://bazaar.launchpad.net/~gldnspud/rest-wordpress/trunk/files
     - http://bazaar.launchpad.net/~p00ya/rest-wordpress/dos-hacks/files

**** Drupal

     - http://drupal.org/node/160846
     - http://drupal.org/node/141
     - http://www.vasudevaservice.com/repository/pub/reStructuredText4Drupal/

**** Vim

     Para obtener el coloreo de la sintaxis sólo es necesario incluir
     al principio del documento la siguiente línea:

     #+BEGIN_EXAMPLE
        .. -*- mode: rst -*-
     #+END_EXAMPLE

**** Emacs

     - http://docutils.sourceforge.net/docs/user/emacs.html

**** MoinMoin

     MoinMoin parsea reST con sólo incluir #!rst entre triples llaves.

     #+BEGIN_EXAMPLE
       {{{#!rst
       Texto *reST*
       }}}
     #+END_EXAMPLE

     - http://moinmo.in/HelpOnParsers/ReStructuredText

**** Python

     Sphinx genera la documentación oficial de python usando *reST*.

     - http://sphinx.pocoo.org/
     - http://docs.python.org/dev/

     *reST* se utiliza para la creación de los PEPs (Python Enhancement Proposals).

     - http://www.python.org/dev/peps/pep-0001/

     EpyDoc genera documentación para Python y soporta *reST*.

     - http://epydoc.sourceforge.net/manual-othermarkup.html

**** rst2a

     Un interesante servicio web que al pasarle una url de un texto
     escrito en *reST* puede devolver el contenido en formato HTML o PDF
     eligiendo diferentes templates, esto evita tener instalado *reST*.

     - http://rst2a.com/
     - http://api.rst2a.com/1.0/rst2/html?uri=http://pub.osiux.com/restructuredtext/reStructuredText.txt

** vim-outliner

   #+BEGIN_EXAMPLE
       vim-outliner
           [_] 66% calcula porcentaje tarea completada
               [X] item 1
               [_] item 2
               [X] 100% item 3
                   [X] item 3.1
                   [X]	item 3.2
           [X] comandos checkbox
               : ,,cb	inserta un checkbox
               : ,,cx  cambia el estado del checkbox
               : ,,cd  elimina checkbox
               : ,,cp  crea checkbox con porcentaje
               : ,,cz  recalcula porcentaje
           [_] niveles
               : ,,0  nivel 1
               : ,,1  nivel 2
               : ,,9  ultimo
           [_] fechas
               : ,,d  inserta el día
               : ,,t  inserta la hora
   #+END_EXAMPLE

** Gething This Done

   #+INCLUDE: "gtd-gething-this-done.org" :lines "10-"

** Emacs

   [[file:img/real-programmers.png]]

   - Emacs es un editor de texto desarrollado por *Richard Stallman* [fn:RMS]
   - Es un intérprete LISP, los comandos pueden ser modificados.
   - Es muy poderoso y algo dificil al principio.
   - Está disponible para consola y para /X/.

*** Convención de Teclas

    | =C-g=     | Mantener pulsada Ctrl, presionar g y soltar Ctrl             |
    | =C-x C-s= | Mantener pulsada Ctrl, presionar x, presionar s, soltar Ctrl |
    | =C-x f=   | Mantener pulsada Ctrl, presionar x, presionar f              |
    | =M-q=     | Mantener pulsada Meta (Esc o Alt), presionar q, soltar Meta  |

*** Rectángulos

    | =C-SPACE= | Marcar una region                    |
    | =C-x r t= | Reemplaza un rectangulo con caracter |
    | =C-x r d= | Borrar un rectangulo                 |
    | =C-x r o= | Inserta un rectangulo en blanco      |
    | =C-x r c= | Reemplaza un rectangulo con espacios |

*** Buffers

    | =C-x C-f= | Buscar un archivo                     |
    | =C-x C-k= | Cerrar un buffer                      |
    | =C-x C-s= | Guardar buffer en un archivo          |
    | =C-x C-w= | Guardar buffer en un archivo distinto |
    | =M-<=     | Ir al principio del buffer            |
    | =M->=     | Ir al final del buffer                |
    | =C-x C-b= | Listar buffers abiertos               |
    | =C-x b=   | Cambiar de buffer                     |

*** Movimiento

    | =M-v= | Retroceder página           |
    | =C-f= | Avanza un caracter          |
    | =C-b= | Retrocede un caracter       |
    | =C-p= | Línea anterior              |
    | =C-n= | Siguiente línea             |
    | =M-f= | Siguiente palabra           |
    | =M-b= | Palabra anterior            |
    | =C-a= | Ir al principio de la línea |
    | =C-e= | Ir al final de la línea     |
    | =C-v= | Avanzar página              |

*** Edición

    | =C-x u= | Deshacer                               |
    | =C-d=   | Borrar caracter                        |
    | =C-g=   | Cancela cualquier comando              |
    | =M-x=   | Permite ejecutar comandos interactivos |
    | =C-w=   | Cortar                                 |
    | =C-y=   | Pegar                                  |
    | =M-w=   | Copiar                                 |
    | =M-y=   | Rota el portapapeles                   |
    | =M-q=   | Justifica un parrafo                   |

*** Buscar y Reemplazar

    | =C-s= | Busqueda hacia adelante |
    | =C-r= | Busqueda hacia atrás    |
    | =M-%= | Buscar y Reemplazar     |

*** Ventanas

    | =C-x 0= | Elimina ventana         |
    | =C-x 1= | 1 sola ventana          |
    | =C-x 2= | 2 ventanas verticales   |
    | =C-x 3= | 2 ventanas horizontales |
    | =C-x o= | Ir a la otra ventana    |

** org-mode

   - Desarrollado por Carsten Dominik.
   - Org mantiene simples las cosas simples.
   - Es un outliner, estructura de arbol, jerarquico con posibilidad
     de ser colapsado.
   - Posee un editor de tablas automático con capacitdades de hoja de
     cálculo.
   - Incluye una completa agenda integrada.
   - Editor de listas (TODO y checkboxes).
   - Se puede usar el sistema GTD [fn:GTD].

*** Configurar =~/.emacs=

    - Es necesario personalizar la configuración del archivo ``~/.emacs``.
    - A partir de emacs 22 viene incluido.
    - Descargar http://pub.osiux.com/org-mode/emacs

    #+BEGIN_EXAMPLE
      (add-to-list 'auto-mode-alist '("\\.org$" . org-mode))
      (global-set-key (kbd "<f12>") 'org-agenda)
      (global-set-key (kbd "<f5>") 'org-todo)
      (defun org-todo () (interactive) (org-narrow-to-subtree)
      (org-show-todo-tree nil))
      (global-set-key (kbd "<S-f5>") 'widen)
      (defun widen () (interactive) (widen)
      (org-reveal))
    #+END_EXAMPLE

*** Estructura del documento

    - Los documentos se organizan en estructura jerárquica.
    - Visión panorámica, de lo general a lo particular.

    #+BEGIN_EXAMPLE
      * cabecera de nivel 1
      ** cabecera nivel 2
      *** cabecera nivel 3
          contenido del nivel 3
      *** otra cabecera nivel 3
          contenido del nivel 3
      * otra cabecera de nivel 1
    #+END_EXAMPLE

*** Rotación de la visibilidad

    Con sólo dos comandos se puede alterar la visibilidad de esquema.

    =TAB=

    [[file:img/org-tab.png]]

    =Shift + TAB=

    [[file:img/org-s-tab.png]]

    La visibilidad por defecto se puede establecer en cada fichero
    mediante:

    #+BEGIN_EXAMPLE
      #+STARTUP: overview
      #+STARTUP: content
      #+STARTUP: showall
    #+END_EXAMPLE

*** Listas y Checkbox

    =M-ENTER / M-S-ENTER=

        Crea un nuevo elemento de la lista. Crea un nuevo checkbox

    =M-LEFT / M-RIGHT=

        Decrementa, incrementa el nivel

    =M-UP / M-DOWN=

        Mueve hacia arriba/abajo en el mismo nivel

    #+BEGIN_EXAMPLE
      * Charlas
      ** org-mode
          - Configuración
          - Ejemplos
            - Cabeceras
            - Listas [1/2] [50%]
              - [_] listas básicas
              - [X] checkbox
          - Otros
            - Varios
    #+END_EXAMPLE

*** Tareas y estados

    - Las tareas pueden tener una o más secuencias de estado:
      =TODO -> NEXT -> DONE=

    #+BEGIN_EXAMPLE
      (setq org-todo-keywords
        (quote (
          (sequence "TODO(t)" "NEXT(n)" "|" "DONE(d!/!)")
      )))
    #+END_EXAMPLE

    #+BEGIN_EXAMPLE
      * Debian en la notebook
      ** DONE Obtener Debian
      *** DONE Descargar ISO
      *** DONE Grabar CD
      ** TODO Hacer backup
      ** TODO Instalar
    #+END_EXAMPLE

*** Tags (Etiquetas)

    - Los tags se heredan de archivo a tarea, subtarea, etc.
    - Una tarea puede tener mas de un tag.
    - Se pueden realizar búsquedas por medio de tags.

    #+BEGIN_EXAMPLE
      * Debian en la notebook     :notebook:
      ** DONE Obtener Debian      :debian:
      *** DONE Descargar ISO      :iso:
      *** DONE Grabar CD          :cd:
      ** TODO Hacer backup        :backup:
      ** TODO Instalar            :instalar:

      *   :notebook:
      **  :notebook:debian:
      *** :notebook:debian:iso:
      *** :notebook:debian:iso:cd:
      **  :notebook:debian:iso:cd:backup:
      **  :notebook:debian:iso:cd:backup:instalar:
    #+END_EXAMPLE

*** Cronometrar Tareas

    =C-c C-x C-i=

        Inicia reloj, posicionado sobre la tarea.

    =C-c C-x C-o=

        Detiene reloj de la tarea actual.

    =C-c C-x C-d=

        Muestra tiempos parciales y totales.

    #+BEGIN_EXAMPLE
    ** DONE Obtener Debian      :debian:.....................** 0:38
    *** DONE Descargar ISO      :iso:........................*** 0:30
       :LOGBOOK:
       CLOCK: [2010-11-09 mar 10:07]--[2010-11-09 mar 10:37] =>  0:30
       :END:
    *** DONE Grabar CD          :cd:.........................*** 0:08
       :LOGBOOK:
       CLOCK: [2010-11-09 mar 10:40]--[2010-11-09 mar 10:48] =>  0:08
       :END:
    #+END_EXAMPLE

*** Reporte de Tiempos

    =C-c C-x C-r=

        Generar un Reporte Tiempos.

    =C-c C-x C-u=

        Actualizar el Reporte.

    #+BEGIN_EXAMPLE
      #+BEGIN: clocktable :maxlevel 3 :scope file
      Clock summary at [2010-11-11 jue 02:45]

      | L | Headline              | Time   |      |      |
      |---+-----------------------+--------+------+------|
      |   | *Total time*          | *0:38* |      |      |
      |---+-----------------------+--------+------+------|
      | 1 | Debian en la notebook | 0:38   |      |      |
      | 2 | DONE Obtener Debian   |        | 0:38 |      |
      | 3 | DONE Descargar ISO    |        |      | 0:30 |
      | 3 | DONE Grabar CD        |        |      | 0:08 |
      #+END:
    #+END_EXAMPLE

*** Agenda

    =C-c a a / C-c a a v w / C-c a a v w=

        Ir a la agenda diaria / de la semana / mes

    =C-c a a l=
        Ver línea de tiempo en la agenda

    #+BEGIN_EXAMPLE
      ** TODO Hacer backup                             :backup:
         SCHEDULED: <2010-11-12 vie 10:00>
      ** TODO Instalar                           :instalar:
         DEADLINE: <2010-11-13 vie>
      ** Charlas
      *** *TODO TXT | rst+org-mode*
          <2010-11-12 vie 14:00>--<2010-11-12 vie 15:00>


      Day-agenda (W45):
      Vie        12 Nov 2010
        demo:       10:00...... Scheduled:  TODO Hacer backup       :notebook::backup:
        osiux:      14:00-15:00 *TODO TXT | rst+org-mode*                     :osiux::
        demo:       In   1 d.:  TODO Instalar                     :notebook::instalar:
    #+END_EXAMPLE

*** Recordatorios

    =C-c r=

        Anotar un recordatorio y seguir trabajando.

    =C-c C-w=

        Mueve una tarea a otro archivo/posición.

    #+BEGIN_EXAMPLE
      (org-remember-insinuate)
      (setq org-directory "~/org/")
      (setq org-attach-directory "~/org/attach/")
      (setq org-default-notes-file "~/org/notas.org")
      (define-key global-map "\C-cr" 'org-remember)
      (setq org-remember-templates
            '(
              ("Todo" ?t "* TODO %?%^g\n" "~/org/notas.org" "Tareas")
              ("Nota" ?n "* %?%^g\n" "~/org/notas.org" "Notas")
              ("Link" ?l "* %?%^g\n" "~/org/notas.org" "Links")
              )
      )
    #+END_EXAMPLE

*** Tablas

    =TAB=

        Actualiza formato de tabla y crea nueva fila

    =M-UP/DOWN/LEFT/RIGHT=

        Invierte posición fila/columna

    #+BEGIN_EXAMPLE
      |horario|sala 1|sala 2|           | horario | sala 1 | sala 2 |
      |-                                |---------+--------+--------+
                                        |         |        |        |

      | horario | sala 1 | sala 2 |
      |---------+--------+--------+
      | 14 a 15 | Gestión de Eventos 911 con PostgreSQL | TODO TXT rst+org-mode |
      |-

      | horario | sala 1                                | sala 2                |
      |---------+---------------------------------------+-----------------------|
      | 14 a 15 | Gestión de Eventos 911 con PostgreSQL | TODO TXT rst+org-mode |
      |---------+---------------------------------------+-----------------------|
    #+END_EXAMPLE

*** Hoja de Cálculo

    =:==

        Edita la formula

    =C-c * / C-u C-c *=

        Recalcula fila / tabla

    #+BEGIN_EXAMPLE

      | item     | importe | porcentaje |
      |----------+---------+------------|
      | luz      |   40.00 |         24 |
      | gas      |   30.00 |       18.1 |
      | telefono |   40.00 |      24.24 |
      | celular  |   55.00 |  33.333333 |
      |----------+---------+------------|
      |          |    165. |            |

      #+TBLFM: @2$3=(@2$2/@6$2)*100;%0d::@3$3=(@3$2/@6$2)*100;%0.1f
             ::@4$3=(@4$2/@6$2)*100;%0.2f::@5$3=(@5$2/@6$2)*100
             ::@6$2=vsum(@I..@II)
    #+END_EXAMPLE

*** Tablas Dinámicas

    =C-c C-x p=

        Establecer propiedad

    =C-c C-x C-c / q=

        Modo columnas / Salir del modo columnas

    #+BEGIN_EXAMPLE
        * gastos               | 165.00 |
        ** luz                 | 40.00  |
           :PROPERTIES:
           :COST:     40.00
           :END:
        ** gas                 | 30.00  |
           :PROPERTIES:
           :COST:     30.00
           :END:
        ** telefono            | 40.00  |
           :PROPERTIES:
           :COST:     40.00
           :END:
        ** celular             | 55.00  |
           :PROPERTIES:
           :COST:     55.00
           :END:
    #+END_EXAMPLE

*** Búsquedas

    =C-c a m / C-c a M=

        Busca por tag, propiedad, =TODO= / sólo por =TODO=

    =C-c /=

        Genera arbol disperso por expresión, propiedad, fechas.

    =C-c a s=

        Busca por expresión regular empleando lógica booleana

    #+BEGIN_EXAMPLE
        (setq org-agenda-custom-commands (
            ("b" . "Bugs pendientes")
                ("ba" "Auditoria " tags-todo "auditoria+bug"
                    (
                        (occur-tree "NEW")
                        (org-agenda-remove-tags t)
                        (org-agenda-sorting-strategy '(effort-down))
                    )
                ) ) )
    #+END_EXAMPLE

*** Exportar

    =C-c a e=

        Exporta vistas de la agenda

    =C-c C-e h=

        Exporta html

    =C-c C-e p=

        Exporta pdf

    =C-c C-e i=

        Exporta calendario ICalendar

    =C-c C-e P=

        Publica proyecto

*** Graphviz

    #+BEGIN_SRC dot :exports both :file graphviz.png :cmdline -Kdot -Tpng
      digraph ejemplo {

       graph [fontname=monospace,fontsize=8];
       node [shape=box,style=filled,color=gray];
       edge [color=black];

       dot  [shape=box,color=blue];
       png  [shape=box,color=mediumspringgreen];
       jpg  [shape=box,color=darkolivegreen];
       pdf  [shape=box,color=orange];

       dot -> png;
       dot -> jpg;
       png -> rst;
       jpg -> rst;
       rst -> pdf;
      }
    #+END_SRC

    #+RESULTS:
    [[file:graphviz.png]]

*** ditaa

    #+BEGIN_SRC ditaa :exports both :file ditaa.png :cmdline -E
      /------\   +------+   +------+
      |      |   |  {c} |   |  {o} |
      | TODO +-->| NEXT |-->| DONE |
      | cYEL |   | cRED |   | cGRE |
      \------/   +------+   +------+
         ^                      ^
         |                      |
         +--------------------=-+
    #+END_SRC

    #+RESULTS:
    [[file:ditaa.png]]

** Dudas y comentarios

osiris@gcoop.coop
    Cualquier duda pueden consultar por email, prometo responder lo antes posible.

http://pub.osiux.com/charlas
    Pueden descargar ésta y otras charlas, incluído el código fuente.

** Gracias!

   A HugoRuscitti <hugoruscitti@gmail.com> por el libro
   GTD [fn:librogtd] y *frontweb* [fn:frontweb], a SebastiánNarvaez
   <snarvaez@gmail.com> por presentarme a *Org-mode* [fn:org-mode], a
   MatíasFernandez <matias@decoder.com.ar> que me ayudó con la gŕafica
   de los slides, a MiguelAngelRios <likevinyl@gmail.com> por la
   remera de Org. A los socios de [[http://gcoop.coop][gcoop]] que me aguantan todos los
   días. A la organización de *Conurbania* [fn:conurbania] por darme
   la oportunidad de compartir estos conocimientos. Y especialmente a
   mi mujer e hijo por robarles tiempo valioso para hacer esta charla.

** Changelog

   - [2014-01-15 mié] Convierto a formato =.org= desde =.rst=

[fn:CC] http://creativecommons.org/licenses/by-sa/2.0
[fn:gcoop] http://www.gcoop.coop
[fn:BAL] http://wiki.buenosaireslibre.org
[fn:USLA] http://www.usla.org.ar
[fn:CaFeLUG] http://www.cafelug.org.ar
[fn:org-mode] http://orgmode.org
[fn:RMS] http://gnu.org
[fn:reST] http://docutils.sourceforge.net/rst.html
[fn:GTD] http://es.wikipedia.org/Getting_Things_Done
[fn:Moolenaar] http://www.moolenaar.net/vim.html
[fn:Joy] http://en.wikipedia.org/wiki/Bill_Joy
[fn:librogtd] http://www.cuspide.com/isbn/849662708X
[fn:frontweb] http://frontweb.com.ar
[fn:conurbania] http://conurbania.org.ar
